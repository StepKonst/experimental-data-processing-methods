import os
import sys

import streamlit as st
from st_pages import add_page_title, show_pages_from_config

sys.path.append(os.path.join(os.path.dirname(__file__), "../.."))

import analysis
import model
import processing
from analysis import utils as analysis_utils
from model import utils as model_utils

model = model.Model()
analysis = analysis.Analysis()
processing = processing.Processing()

add_page_title()
show_pages_from_config()


def main():
    st.markdown(
        """
        ## –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —à—É–º–∞

        –ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω–æ–≥–æ —à—É–º–∞. 
        
        –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à—É–º–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å.

        ### –ù–∞—Å—Ç—Ä–æ–π–∫–∏

        - **–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ "N":** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—É–º–∞.
        - **–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ "R":** –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—É–º–∞.
        - **–í—ã–±–µ—Ä–∏—Ç–µ —Å–º–µ—â–µ–Ω–∏–µ "C":** –ó–Ω–∞—á–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —à—É–º—É.
        - **–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–≥–º–µ–Ω—Ç –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è:** –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —à—É–º–µ.

        """
    )

    st.sidebar.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    n_value, r_value, c_value, segment = model_utils.get_noise_value()

    noise_data = model_utils.get_noise(n_value, r_value)
    noise_data_cross = model.noise(n_value, r_value)[1]

    shift_noise_data = model.shift(noise_data, c_value, segment[0], segment[1])
    data_cross = model.shift(noise_data_cross, c_value, segment[0], segment[1])

    statistical_characteristics = analysis.statistics(shift_noise_data)

    st.sidebar.success(f"–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫: [{segment[0]}, {segment[1]}]")

    st.markdown(
        """
        #### –ì—Ä–∞—Ñ–∏–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —à—É–º–∞.
        
        –ì—Ä–∞—Ñ–∏–∫ –Ω–∏–∂–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º —Å–ª—É—á–∞–π–Ω—ã–π —à—É–º.
        
        """
    )
    model_utils.plot_line_chart(
        range(len(shift_noise_data)),
        shift_noise_data,
        "–í—Ä–µ–º—è",
        "–ó–Ω–∞—á–µ–Ω–∏–µ —à—É–º–∞",
        "red",
        width=1,
    )

    st.markdown(
        """
        #### –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.
        
        –í –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è —à—É–º–∞.
        
        """
    )
    model_utils.get_dataframe(statistical_characteristics)

    st.markdown(
        """
        
            #### –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—É–º–∞ –Ω–∞ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ—Å—Ç—å.
            
            –í —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–æ–≤–µ—Ä–∫–∞ —à—É–º–∞ –Ω–∞ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ—Å—Ç—å" –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–¥—Ö–æ–¥. 
            –°–Ω–∞—á–∞–ª–∞ –º—ã —Ä–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω—É ùëÅ –Ω–∞ ùëÄ —Ä–∞–≤–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤ –∏ –≤—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 
            (–°–ó) ùë•ÃÖùëñ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (–°–û) ùúéùëñ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞. –ó–∞—Ç–µ–º, –ø—É—Ç–µ–º –ø–æ–ª–Ω–æ–≥–æ 
            –ø–µ—Ä–µ–±–æ—Ä–∞ –≤—Å–µ—Ö –ø–∞—Ä –æ—Ç—Ä–µ–∑–∫–æ–≤, –º—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ–ª–∏—á–∏–Ω—ã –∏—Ö –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π: 
            –¥–ª—è –°–ó - ùõøùëñùëó = ùë•ÃÖùëñ‚àíùë•ÃÖùëó –∏ –¥–ª—è –°–û - ùõøùëñùëó = ùúéùëñ‚àíùúéùëó; –≥–¥–µ ùëñ‚â†ùëó; ùëñ,j=1,2,..,ùëÄ. –ï—Å–ª–∏ –≤–µ–ª–∏—á–∏–Ω—ã 
            –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –º–µ–Ω–µ–µ 5% –æ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–π —à—É–º–∞, —Ç–æ –º—ã 
            —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–º. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ - –Ω–µ—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–º.
        
        """
    )
    m_value = st.number_input(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –¥–ª—è —à—É–º–∞",
        step=1,
        value=5,
        max_value=50,
    )
    st.success(analysis.stationarity(shift_noise_data, m_value))

    st.divider()
    st.markdown(
        """
        
            #### –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤ –Ω–∏—Ö —Å–º–µ—â–µ–Ω–∏—è
            
            –ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–º–µ—â–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö –º—ã —Å–ª–µ–¥—É–µ–º —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–¥—Ö–æ–¥—É. 
            –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (—Ü–µ–Ω—Ç—Ä —Ä–∞—Å—Å–µ–∏–≤–∞–Ω–∏—è) –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã—á–∏—Ç–∞–µ–º –µ–≥–æ –∏–∑ –≤—Å–µ—Ö 
            –∑–Ω–∞—á–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª–∏—Ç—å —Å–º–µ—â–µ–Ω–∏–µ –∏ —Å–¥–µ–ª–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏.
                
        """
    )
    anti_shift_data = processing.antishift(shift_noise_data)
    model_utils.plot_line_chart(
        range(len(anti_shift_data)),
        anti_shift_data,
        "–í—Ä–µ–º—è",
        "–ó–Ω–∞—á–µ–Ω–∏–µ —à—É–º–∞",
        "red",
        width=1,
    )

    st.divider()
    analysis_utils.distribution_density(shift_noise_data, "red")

    st.divider()
    st.markdown("#### –ì—Ä–∞—Ñ–∏–∫ –ê–≤—Ç–æ–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–∏ÃÜ —Ñ—É–Ω–∫—Ü–∏–∏")
    acf = analysis.acf(shift_noise_data, "–ê–≤—Ç–æ–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
    analysis_utils.plot_autocorrelation(
        acf.set_index("L"), "–í—Ä–µ–º—è", "–ó–Ω–∞—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏", "red"
    )

    st.divider()
    st.markdown("#### –ì—Ä–∞—Ñ–∏–∫ –ö–æ–≤–∞—Ä–∏–∞—Ü–∏–æ–Ω–Ω–æ–∏ÃÜ —Ñ—É–Ω–∫—Ü–∏–∏")
    cf = analysis.acf(shift_noise_data, "–ö–æ–≤–∞—Ä–∏–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
    analysis_utils.plot_autocorrelation(
        cf.set_index("L"), "–í—Ä–µ–º—è", "–ó–Ω–∞—á–µ–Ω–∏–µ –∫–æ–≤–∞—Ä–∏–∞—Ü–∏–∏", "red"
    )

    st.divider()
    cross_correlation = analysis.ccf(shift_noise_data, data_cross)

    st.markdown("#### –ì—Ä–∞—Ñ–∏–∫ –∫—Ä–æ—Å–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏")
    analysis_utils.plot_cross_correlation(
        cross_correlation.set_index("L"), "–í—Ä–µ–º—è", "–ó–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–æ—Å–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏", "red"
    )

    st.sidebar.markdown("---")
    st.sidebar.write("¬© 2023 StepKonst. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.")


if __name__ == "__main__":
    main()
